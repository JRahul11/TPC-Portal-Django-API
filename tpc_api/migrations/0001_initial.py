# Generated by Django 3.2.13 on 2022-06-16 16:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '__first__'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('roll_no', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'M'), ('F', 'F')], max_length=10, null=True)),
                ('github', models.CharField(blank=True, max_length=50, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=50, null=True)),
                ('no_of_offers', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(default='dypatil@123', max_length=100)),
                ('photo', models.TextField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('batch', models.IntegerField(blank=True, null=True)),
                ('rait_email', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Student',
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Admin',
                'db_table': 'admins',
            },
        ),
        migrations.CreateModel(
            name='AcademicInfo',
            fields=[
                ('student', models.OneToOneField(db_column='roll_no', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tpc_api.student')),
                ('tenth_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('tenth_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('tenth_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('tenth_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('twelveth_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('twelveth_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('twelveth_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('twelveth_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('diploma_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('diploma_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('diploma_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('diploma_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem1_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sem1_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sem1_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem1_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem2_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sem2_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sem2_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem2_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem3_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sem3_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sem3_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem3_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem4_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sem4_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sem4_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem4_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem5_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sem5_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sem5_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem5_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem6_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sem6_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sem6_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem6_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem7_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sem7_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sem7_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem7_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem8_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sem8_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('sem8_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('sem8_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('be_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('masters_sem1_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('masters_sem1_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('masters_sem1_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('masters_sem1_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('masters_sem2_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('masters_sem2_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('masters_sem2_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('masters_sem2_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('masters_sem3_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('masters_sem3_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('masters_sem3_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('masters_sem3_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('masters_sem4_pointer', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('masters_sem4_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('masters_sem4_obtained_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('masters_sem4_total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('masters_cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('masters_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('livekt', models.IntegerField(blank=True, null=True)),
                ('deadkt', models.IntegerField(blank=True, null=True)),
                ('gap', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Student Academic Info',
                'db_table': 'academic_info',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('student', models.OneToOneField(db_column='roll_no', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tpc_api.student')),
                ('internship_one_title', models.CharField(blank=True, max_length=100, null=True)),
                ('internship_one_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('internship_one_start_date', models.CharField(blank=True, max_length=20, null=True)),
                ('internship_one_end_date', models.CharField(blank=True, max_length=20, null=True)),
                ('internship_two_title', models.CharField(blank=True, max_length=100, null=True)),
                ('internship_two_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('internship_two_start_date', models.CharField(blank=True, max_length=20, null=True)),
                ('internship_two_end_date', models.CharField(blank=True, max_length=20, null=True)),
                ('internship_three_title', models.CharField(blank=True, max_length=100, null=True)),
                ('internship_three_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('internship_three_start_date', models.CharField(blank=True, max_length=20, null=True)),
                ('internship_three_end_date', models.CharField(blank=True, max_length=20, null=True)),
                ('project_one_title', models.CharField(blank=True, max_length=100, null=True)),
                ('project_one_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('project_one_start_date', models.CharField(blank=True, max_length=20, null=True)),
                ('project_one_end_date', models.CharField(blank=True, max_length=20, null=True)),
                ('project_two_title', models.CharField(blank=True, max_length=100, null=True)),
                ('project_two_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('project_two_start_date', models.CharField(blank=True, max_length=20, null=True)),
                ('project_two_end_date', models.CharField(blank=True, max_length=20, null=True)),
                ('project_three_title', models.CharField(blank=True, max_length=100, null=True)),
                ('project_three_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('project_three_start_date', models.CharField(blank=True, max_length=20, null=True)),
                ('project_three_end_date', models.CharField(blank=True, max_length=20, null=True)),
                ('pref_lang', models.CharField(blank=True, max_length=50, null=True)),
                ('technologies', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name_plural': 'Student Experience',
                'db_table': 'student_experience',
            },
        ),
        migrations.CreateModel(
            name='OtherInfo',
            fields=[
                ('student', models.OneToOneField(db_column='roll_no', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tpc_api.student')),
                ('hobbies', models.CharField(blank=True, max_length=1000, null=True)),
                ('pos_of_res_one', models.CharField(blank=True, max_length=100, null=True)),
                ('pos_of_res_two', models.CharField(blank=True, max_length=100, null=True)),
                ('pos_of_res_three', models.CharField(blank=True, max_length=100, null=True)),
                ('pos_of_res_four', models.CharField(blank=True, max_length=100, null=True)),
                ('extracuricular_one', models.CharField(blank=True, max_length=500, null=True)),
                ('extracuricular_two', models.CharField(blank=True, max_length=500, null=True)),
                ('extracuricular_three', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name_plural': 'Student Other Info',
                'db_table': 'other_info',
            },
        ),
        migrations.CreateModel(
            name='PlacementDetails',
            fields=[
                ('student', models.OneToOneField(db_column='roll_no', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tpc_api.student')),
                ('offer_letter_one', models.BinaryField(blank=True, editable=True, null=True)),
                ('offer_letter_two', models.BinaryField(blank=True, editable=True, null=True)),
                ('offer_letter_three', models.BinaryField(blank=True, editable=True, null=True)),
                ('placed_org_one', models.CharField(blank=True, max_length=100, null=True)),
                ('placed_org_two', models.CharField(blank=True, max_length=100, null=True)),
                ('placed_org_three', models.CharField(blank=True, max_length=100, null=True)),
                ('package_one', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('package_two', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('package_three', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('placed_company', models.CharField(blank=True, max_length=50, null=True)),
                ('placed_package', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
            ],
            options={
                'verbose_name_plural': 'Student Placement Detail',
                'db_table': 'student_placement_details',
            },
        ),
        migrations.CreateModel(
            name='SkillSet',
            fields=[
                ('student', models.OneToOneField(db_column='roll_no', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tpc_api.student')),
                ('certificate_one', models.CharField(blank=True, max_length=200, null=True)),
                ('certificate_one_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('certificate_two', models.CharField(blank=True, max_length=200, null=True)),
                ('certificate_two_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('certificate_three', models.CharField(blank=True, max_length=200, null=True)),
                ('certificate_three_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('certificate_four', models.CharField(blank=True, max_length=200, null=True)),
                ('certificate_four_completion_date', models.CharField(blank=True, max_length=20, null=True)),
                ('acad_achievement_one', models.CharField(blank=True, max_length=200, null=True)),
                ('acad_achievement_two', models.CharField(blank=True, max_length=200, null=True)),
                ('acad_achievement_three', models.CharField(blank=True, max_length=200, null=True)),
                ('acad_achievement_four', models.CharField(blank=True, max_length=200, null=True)),
                ('career_obj', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'verbose_name_plural': 'Student SkillSet',
                'db_table': 'student_skillset',
            },
        ),
        migrations.CreateModel(
            name='EligibleStudents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_opening', models.ForeignKey(db_column='job_id', on_delete=django.db.models.deletion.CASCADE, to='company.jobopening')),
                ('student', models.ForeignKey(db_column='roll_no', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Eligible Students',
                'db_table': 'eligible_students',
            },
        ),
    ]
